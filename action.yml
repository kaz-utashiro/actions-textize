ame: textize documents

inputs:
  root:   { required: false, type: string }
  branch: { required: false, type: string, default: textize }
  token:  { required: true, default: '${{ github.token }}' }

runs:
  using: composite
  steps:

    - uses: office-tecoli/actions-use-any-tools@v0
      with:
        perl: App::optex::textconv
        apt:  poppler-utils

    - uses: actions/checkout@v2
      with:
        ref: ${{ inputs.branch }}
        path: __textize__

    - id: setup
      shell: bash
      run: |
        git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com>"
        git config --global user.name  "$GITHUB_ACTOR"
        cat << END
        ::set-output name=textize::$GITHUB_ACTION_PATH/textize.sh
        END

    - id: textize
      shell: bash
      run: |
        : textize
        root=${{ inputs.root }}
        : ${root:=.}
        textize=${{ steps.setup.outputs.textize }}
        files=$(git ls-files $root)
        echo Processing $files ...
        update=$( $textize $files )
        echo Update: $update
        cat << END
        ::set-output name=update::$update
        END
        (
            cd __textize__
            git fetch origin $GITHUB_REF_NAME || :
            git merge \
                --allow-unrelated-histories \
                -m "merge origin/$GITHUB_REF_NAME" \
                -s ort -X theirs \
                origin/$GITHUB_REF_NAME || : \
        )
        tar -cf - $update | tar -C __textize__ -xvf -

    - id: export
      shell: bash
      run: |
        : export
        cd __textize__
        update="${{ steps.textize.outputs.update }}"
        git add .
        if git commit -m "update $update"
        then
            git push
        fi
